#pragma once
#include<iostream>
#include<vector>
using namespace std;

void matrix_transpose(vector<vector<double>>& A);//??????????

void forward_subs(vector<vector<double>>& L, vector<double>& b);//?????

void forward_subs1(vector<vector<double>>& L, vector<double>& b);//?????1???????

void back_subs(vector<vector<double>>& U, vector<double>& b);//?????

void back_subs1(vector<vector<double>>& U, vector<double>& y);//?????1??????

void gauss_elim(vector<vector<double>>& A);//Gauss?????

void gauss_elim_full_pivoting(vector<vector<double>>& A, vector<int>& u, vector<int>& v);//????Gauss?????

void gauss_elim_col_pivoting( vector<vector<double>>& A, vector<int>& u);//?????Gauss?????

void vector_pb(vector<int>&u,vector<double>&b);//????????P*b???????

void vector_qb(vector<int>& v, vector<double>& b);//????????Q*b???????

void cholesky_decomp(vector<vector<double>>& A);//???????????Cholesky???

void modified_cholesky_decomp(vector<vector<double>>& A);//????????????

void matrix_DLT(vector<vector<double>>& A);//???????D*L^T???????

void solution_print(vector<double>& b);//?????

void matrix_print(vector<vector<double>>& A);//???????

void matrix_vector_multiply(vector<vector<double>>& A, vector<double>& b);//????????A*b

void matrix_full_transpose(vector<vector<double>>& A);//?????????

double vectors_multiply(vector<double>& a, vector<double>& b);//????a,b???

double vector_infinity_norm(vector<double>& a);//????a????????

double vector_1_norm(vector<double>& a);//????a??1????

double matrix_1_norm(vector<vector<double>>& B);//?????????????1????

double matrix_1_norm_traditional(vector<vector<double>>& B);//?????????????1????

double matrix_infinity_norm(vector<vector<double>>& A);//??????????????

double matrix_inverse_infinity_norm(vector<vector<double>>& A);//???????A^(-1)????????